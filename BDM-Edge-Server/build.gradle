buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/plugins-release/" }
    }
    dependencies {
    	//classpath('io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE')
        //classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}


apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: "maven"
apply plugin: 'com.palantir.docker'

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RC1'
	}
}

bootJar {
	launchScript()
	baseName = 'bdm-zuul-server'
	version = '0.0.1-SNAPSHOT'
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
     maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web'){
	    exclude module: 'spring-boot-starter-logging'
    	exclude module: "logback-classic"
    	exclude module: "log4j-over-slf4j"
	}
    compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile group: 'log4j', name: 'apache-log4j-extras', version: '1.1'
}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}